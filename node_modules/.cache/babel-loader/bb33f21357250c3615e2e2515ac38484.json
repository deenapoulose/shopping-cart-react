{"ast":null,"code":"var _jsxFileName = \"/home/toobler/newcart/src/components/section/Cart.js\";\nimport React, { Component } from 'react';\nimport DataContext from '../Context';\nimport { Link } from 'react-router-dom';\nimport Colors from './Colors';\nimport '../css/Details.css';\nimport '../css/Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  var incart = JSON.parse(localStorage.getItem(\"cart\"));\n\n  if (incart === null) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Nothings Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.src,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", item.price * item.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Colors, {\n            colors: item.colors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"count\",\n              children: \" - \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"count\",\n              children: \" + \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          children: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  } // export class Cart extends Component {\n  //     static contextType = DataContext;\n  //     componentDidMount(){\n  //         this.context.getTotal();\n  //     }\n  //     render() {\n  //         const {cart,increase,reduction,removeProduct,total} = this.context;\n  //         if(cart.length === 0){\n  //             return <h2 style={{textAlign:\"center\"}}>Nothings Product</h2>\n  //         }else{\n  //             return (\n  //                 <>\n  //                     {\n  //                         cart.map(item =>(\n  //                             <div className=\"details cart\" key={item._id}>\n  //                                 <img src={item.src} alt=\"\"/>\n  //                                 <div className=\"box\">\n  //                                     <div className=\"row\">\n  //                                         <h2>{item.title}</h2>\n  //                                         <span>${item.price * item.count}</span>\n  //                                     </div>\n  //                                     <Colors colors={item.colors}/>\n  //                                     <p>{item.description}</p>\n  //                                     <p>{item.content}</p>\n  //                                     <div className=\"amount\">\n  //                                         <button className=\"count\" onClick={() => reduction(item._id)}> - </button>\n  //                                         <span>{item.count}</span>\n  //                                         <button className=\"count\" onClick={() => increase(item._id)}> + </button>\n  //                                     </div>\n  //                                 </div>\n  //                                 <div className=\"delete\" onClick={() => removeProduct(item._id)}>X</div>\n  //                             </div>\n  //                         ))\n  //                     }\n  //                     <div className=\"total\">\n  //                         <Link >Payment</Link>\n  //                         <h3>Total: ${total}</h3>\n  //                     </div>\n  //                 </>\n  //                 )\n  //             }\n  //         }\n  // }\n\n};\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/toobler/newcart/src/components/section/Cart.js"],"names":["React","Component","DataContext","Link","Colors","Cart","incart","JSON","parse","localStorage","getItem","textAlign","cart","map","item","src","title","price","count","colors","description","content","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,oBAAP;AACA,OAAO,iBAAP;;;AACA,MAAMC,IAAI,GAAI,MAAI;AACd,MAAIC,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;;AACA,MAAGJ,MAAM,KAAI,IAAb,EAAkB;AACd,wBAAO;AAAI,MAAA,KAAK,EAAE;AAACK,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAKI;AAEJ,wBACI;AAAA,iBAEgBC,IAAI,CAACC,GAAL,CAASC,IAAI,iBACT;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,8BAAQF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEJ,IAAI,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,sBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAIN,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAQ,cAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAA,wBAAOP,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAkBI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA,SAAmCJ,IAAI,CAACQ,GAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,CAFhB,eA0BY;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCF,GA5CgB,CA6ClB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,CA1FD;;KAAMjB,I;AA2FN,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport DataContext from '../Context'\nimport {Link} from 'react-router-dom'\nimport Colors from './Colors'\nimport '../css/Details.css'\nimport '../css/Cart.css'\nconst Cart  = ()=>{\n    var incart=JSON.parse(localStorage.getItem(\"cart\"));\n    if(incart ===null){\n        return <h2 style={{textAlign:\"center\"}}>Nothings Product</h2>\n    }\n  \n\n    else{\n                    \n    return(\n        <div>\n            {\n                        cart.map(item =>(\n                            <div className=\"details cart\" key={item._id}>\n                                <img src={item.src} alt=\"\"/>\n                                <div className=\"box\">\n                                    <div className=\"row\">\n                                        <h2>{item.title}</h2>\n                                        <span>${item.price * item.count}</span>\n                                    </div>\n                                    <Colors colors={item.colors}/>\n                                    <p>{item.description}</p>\n                                    <p>{item.content}</p>\n                                    <div className=\"amount\">\n                                        <button className=\"count\" > - </button>\n                                        \n                                        <span>{item.count}</span>\n                                        <button className=\"count\" > + </button>\n                                       \n                                    </div>\n                                </div>\n                                <div className=\"delete\" >X</div>\n                                \n                            </div>\n                        ))\n                    }\n                    <div className=\"total\">\n                        <Link >Payment</Link>\n                        <h3>Total</h3>\n                      \n                    </div>\n        </div>\n    )\n\n }\n// export class Cart extends Component {\n//     static contextType = DataContext;\n\n//     componentDidMount(){\n//         this.context.getTotal();\n//     }\n    \n//     render() {\n//         const {cart,increase,reduction,removeProduct,total} = this.context;\n//         if(cart.length === 0){\n//             return <h2 style={{textAlign:\"center\"}}>Nothings Product</h2>\n//         }else{\n//             return (\n//                 <>\n//                     {\n//                         cart.map(item =>(\n//                             <div className=\"details cart\" key={item._id}>\n//                                 <img src={item.src} alt=\"\"/>\n//                                 <div className=\"box\">\n//                                     <div className=\"row\">\n//                                         <h2>{item.title}</h2>\n//                                         <span>${item.price * item.count}</span>\n//                                     </div>\n//                                     <Colors colors={item.colors}/>\n//                                     <p>{item.description}</p>\n//                                     <p>{item.content}</p>\n//                                     <div className=\"amount\">\n//                                         <button className=\"count\" onClick={() => reduction(item._id)}> - </button>\n//                                         <span>{item.count}</span>\n//                                         <button className=\"count\" onClick={() => increase(item._id)}> + </button>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"delete\" onClick={() => removeProduct(item._id)}>X</div>\n//                             </div>\n//                         ))\n//                     }\n//                     <div className=\"total\">\n//                         <Link >Payment</Link>\n//                         <h3>Total: ${total}</h3>\n//                     </div>\n//                 </>\n//                 )\n//             }\n//         }\n// }\n}\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}